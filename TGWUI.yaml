AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 Instance
Parameters:
 KeyName:
   Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
   Type: AWS::EC2::KeyPair::KeyName
   ConstraintDescription: must be the name of an existing EC2 KeyPair.

Mappings:
  RegionToAmiId:
    us-east-1:
      AMI: ami-0649417d1ede3c91a

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-sg
      GroupDescription: Security group for EC2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: g5.2xlarge
      ImageId: !FindInMap [RegionToAmiId, !Ref AWS::Region, AMI]
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 500
            VolumeType: gp2
      "Tags" : [
        {"Key" : "Name", "Value" : "textgen-webui-autoinstall"},
      ]
      SecurityGroups:
        - Ref: SecurityGroup
      UserData:
        'Fn::Base64': |
          #!/bin/bash
          cd /home/ubuntu
          sudo -u ubuntu -i <<'EOF'
          # Install Conda
          curl -sL "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh" > "Miniconda3.sh"
          bash Miniconda3.sh -b -u -p miniconda
          source /home/ubuntu/miniconda/bin/activate

          # Create a new conda environment
          conda create -n textgen python=3.10.9 -y
          conda activate textgen
          pip install --quiet ipykernel
          python -m ipykernel install --user --name TextGen --display-name TextGen

          #Install Pytorch
          pip3 install torch torchvision torchaudio

          # Install the web UI
          git clone https://github.com/oobabooga/text-generation-webui
          cd text-generation-webui
          pip install -r requirements.txt
          echo -e "TextGen WebUI Installation is complete."

          # Create a new conda environment
          conda create -n myapp python=3.10.9 -y
          conda activate myapp
          pip install --quiet ipykernel
          python -m ipykernel install --user --name MyApp --display-name MyApp
          pip install langchain streamlit
          # Add git clone here
          echo -e "MyApp environment setup is complete."

          EOF

Outputs:
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
